/*
 * This file was automatically generated by tecsgen.
 * This file is not intended to be edited.
 */
#ifndef tSIOPortV850ESFK3Main_TECSGEN_H
#define tSIOPortV850ESFK3Main_TECSGEN_H

/*
 * celltype          :  tSIOPortV850ESFK3Main
 * global name       :  tSIOPortV850ESFK3Main
 * idx_is_id(actual) :  no(no)
 * singleton         :  no
 * has_CB            :  false
 * has_INIB          :  0
 * rom               :  yes
 * CB initializer    :  yes
 */

/* global header #_IGH_# */
#include "global_tecsgen.h"

/* signature header #_ISH_# */
#include "sSIOPort_tecsgen.h"
#include "siSIOCBR_tecsgen.h"
#include "sInterruptRequest_tecsgen.h"

#ifndef TOPPERS_MACRO_ONLY

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/* cell INIB type definition #_CIP_# */
typedef const struct tag_tSIOPortV850ESFK3Main_INIB {
    /* call port #_TCP_# */
    /* call port #_NEP_# */ 
}  tSIOPortV850ESFK3Main_INIB;

/* CB not exist. CB corresponding to INIB #_DCI_# */
#define tSIOPortV850ESFK3Main_CB_tab           tSIOPortV850ESFK3Main_INIB_tab
#define tSIOPortV850ESFK3Main_SINGLE_CELL_CB   tSIOPortV850ESFK3Main_SINGLE_CELL_INIB
#define tSIOPortV850ESFK3Main_CB               tSIOPortV850ESFK3Main_INIB
#define tag_tSIOPortV850ESFK3Main_CB           tag_tSIOPortV850ESFK3Main_INIB

extern tSIOPortV850ESFK3Main_CB  tSIOPortV850ESFK3Main_CB_tab[];

/* celltype IDX type #_CTIX_# */
typedef const struct tag_tSIOPortV850ESFK3Main_INIB *tSIOPortV850ESFK3Main_IDX;

/* prototype declaration of entry port function #_EPP_# */
/* sSIOPort */
Inline void         tSIOPortV850ESFK3Main_eSIOPort_open(tSIOPortV850ESFK3Main_IDX idx);
Inline void         tSIOPortV850ESFK3Main_eSIOPort_close(tSIOPortV850ESFK3Main_IDX idx);
Inline bool_t       tSIOPortV850ESFK3Main_eSIOPort_putChar(tSIOPortV850ESFK3Main_IDX idx, char c);
Inline int_t        tSIOPortV850ESFK3Main_eSIOPort_getChar(tSIOPortV850ESFK3Main_IDX idx);
Inline void         tSIOPortV850ESFK3Main_eSIOPort_enableCBR(tSIOPortV850ESFK3Main_IDX idx, uint_t cbrtn);
Inline void         tSIOPortV850ESFK3Main_eSIOPort_disableCBR(tSIOPortV850ESFK3Main_IDX idx, uint_t cbrtn);
/* siSIOCBR */
Inline void         tSIOPortV850ESFK3Main_eiSIOCBR_readySend(tSIOPortV850ESFK3Main_IDX idx);
Inline void         tSIOPortV850ESFK3Main_eiSIOCBR_readyReceive(tSIOPortV850ESFK3Main_IDX idx);
#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* TOPPERS_MACRO_ONLY */

/* to get the definition of CB type of referenced celltype for optimization #_ICT_# */
#ifndef  TOPPERS_CB_TYPE_ONLY
#define  tSIOPortV850ESFK3Main_CB_TYPE_ONLY
#define TOPPERS_CB_TYPE_ONLY
#endif  /* TOPPERS_CB_TYPE_ONLY */
#include "tSerialPortMain_tecsgen.h"
#include "tSCIF_tecsgen.h"
#include "tInterruptRequest_tecsgen.h"
#ifdef  tSIOPortV850ESFK3Main_CB_TYPE_ONLY
#undef TOPPERS_CB_TYPE_ONLY
#endif /* tSIOPortV850ESFK3Main_CB_TYPE_ONLY */
#define tSIOPortV850ESFK3Main_ID_BASE        (1)  /* ID Base  #_NIDB_# */
#define tSIOPortV850ESFK3Main_N_CELL        (1)  /*  number of cells  #_NCEL_# */

/* IDX validation macro #_CVI_# */
#define tSIOPortV850ESFK3Main_VALID_IDX(IDX) (1)

/* optional call port test macro #_TOCP_# */
#define tSIOPortV850ESFK3Main_is_ciSIOCBR_joined(p_that) \
	  (1)

/* celll CB macro #_GCB_# */
#define tSIOPortV850ESFK3Main_GET_CELLCB(idx) (idx)
 /* call port function macro #_CPM_# */
#define tSIOPortV850ESFK3Main_ciSIOCBR_readySend( p_that ) \
	  tSerialPortMain_eiSIOCBR_readySend( \
	   &tSerialPortMain_CB_tab[0] )
#define tSIOPortV850ESFK3Main_ciSIOCBR_readyReceive( p_that ) \
	  tSerialPortMain_eiSIOCBR_readyReceive( \
	   &tSerialPortMain_CB_tab[0] )
#define tSIOPortV850ESFK3Main_cSIOPort_open( p_that ) \
	  tSCIF_eSIOPort_open( \
	   &tSCIF_CB_tab[0] )
#define tSIOPortV850ESFK3Main_cSIOPort_close( p_that ) \
	  tSCIF_eSIOPort_close( \
	   &tSCIF_CB_tab[0] )
#define tSIOPortV850ESFK3Main_cSIOPort_putChar( p_that, c ) \
	  tSCIF_eSIOPort_putChar( \
	   &tSCIF_CB_tab[0], (c) )
#define tSIOPortV850ESFK3Main_cSIOPort_getChar( p_that ) \
	  tSCIF_eSIOPort_getChar( \
	   &tSCIF_CB_tab[0] )
#define tSIOPortV850ESFK3Main_cSIOPort_enableCBR( p_that, cbrtn ) \
	  tSCIF_eSIOPort_enableCBR( \
	   &tSCIF_CB_tab[0], (cbrtn) )
#define tSIOPortV850ESFK3Main_cSIOPort_disableCBR( p_that, cbrtn ) \
	  tSCIF_eSIOPort_disableCBR( \
	   &tSCIF_CB_tab[0], (cbrtn) )
#define tSIOPortV850ESFK3Main_cRxInterruptRequest_disable( p_that ) \
	  tInterruptRequest_eInterruptRequest_disable( \
	   &tInterruptRequest_CB_tab[0] )
#define tSIOPortV850ESFK3Main_cRxInterruptRequest_enable( p_that ) \
	  tInterruptRequest_eInterruptRequest_enable( \
	   &tInterruptRequest_CB_tab[0] )
#define tSIOPortV850ESFK3Main_cRxInterruptRequest_clear( p_that ) \
	  tInterruptRequest_eInterruptRequest_clear( \
	   &tInterruptRequest_CB_tab[0] )
#define tSIOPortV850ESFK3Main_cRxInterruptRequest_raise( p_that ) \
	  tInterruptRequest_eInterruptRequest_raise( \
	   &tInterruptRequest_CB_tab[0] )
#define tSIOPortV850ESFK3Main_cRxInterruptRequest_probe( p_that ) \
	  tInterruptRequest_eInterruptRequest_probe( \
	   &tInterruptRequest_CB_tab[0] )
#define tSIOPortV850ESFK3Main_cTxInterruptRequest_disable( p_that ) \
	  tInterruptRequest_eInterruptRequest_disable( \
	   &tInterruptRequest_CB_tab[1] )
#define tSIOPortV850ESFK3Main_cTxInterruptRequest_enable( p_that ) \
	  tInterruptRequest_eInterruptRequest_enable( \
	   &tInterruptRequest_CB_tab[1] )
#define tSIOPortV850ESFK3Main_cTxInterruptRequest_clear( p_that ) \
	  tInterruptRequest_eInterruptRequest_clear( \
	   &tInterruptRequest_CB_tab[1] )
#define tSIOPortV850ESFK3Main_cTxInterruptRequest_raise( p_that ) \
	  tInterruptRequest_eInterruptRequest_raise( \
	   &tInterruptRequest_CB_tab[1] )
#define tSIOPortV850ESFK3Main_cTxInterruptRequest_probe( p_that ) \
	  tInterruptRequest_eInterruptRequest_probe( \
	   &tInterruptRequest_CB_tab[1] )

#ifndef TOPPERS_MACRO_ONLY

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/* prototype declaration of entry port function (referenced when VMT useless optimise enabled) #_EPSP_# */

#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* TOPPERS_MACRO_ONLY */

/* IDX validation macro (abbrev.) #_CVIA_# */
#define VALID_IDX(IDX)  tSIOPortV850ESFK3Main_VALID_IDX(IDX)


/* cell CB macro (abbrev) #_GCBA_# */
#define GET_CELLCB(idx)  tSIOPortV850ESFK3Main_GET_CELLCB(idx)

/* CELLCB type (abbrev) #_CCT_# */
#define CELLCB	tSIOPortV850ESFK3Main_CB

/* celltype IDX type (abbrev) #_CTIXA_# */
#define CELLIDX	tSIOPortV850ESFK3Main_IDX

/* call port function macro (abbrev) #_CPMA_# */
#define ciSIOCBR_readySend( ) \
          ((void)p_cellcb, tSIOPortV850ESFK3Main_ciSIOCBR_readySend( p_cellcb ))
#define ciSIOCBR_readyReceive( ) \
          ((void)p_cellcb, tSIOPortV850ESFK3Main_ciSIOCBR_readyReceive( p_cellcb ))
#define cSIOPort_open( ) \
          ((void)p_cellcb, tSIOPortV850ESFK3Main_cSIOPort_open( p_cellcb ))
#define cSIOPort_close( ) \
          ((void)p_cellcb, tSIOPortV850ESFK3Main_cSIOPort_close( p_cellcb ))
#define cSIOPort_putChar( c ) \
          ((void)p_cellcb, tSIOPortV850ESFK3Main_cSIOPort_putChar( p_cellcb, c ))
#define cSIOPort_getChar( ) \
          ((void)p_cellcb, tSIOPortV850ESFK3Main_cSIOPort_getChar( p_cellcb ))
#define cSIOPort_enableCBR( cbrtn ) \
          ((void)p_cellcb, tSIOPortV850ESFK3Main_cSIOPort_enableCBR( p_cellcb, cbrtn ))
#define cSIOPort_disableCBR( cbrtn ) \
          ((void)p_cellcb, tSIOPortV850ESFK3Main_cSIOPort_disableCBR( p_cellcb, cbrtn ))
#define cRxInterruptRequest_disable( ) \
          ((void)p_cellcb, tSIOPortV850ESFK3Main_cRxInterruptRequest_disable( p_cellcb ))
#define cRxInterruptRequest_enable( ) \
          ((void)p_cellcb, tSIOPortV850ESFK3Main_cRxInterruptRequest_enable( p_cellcb ))
#define cRxInterruptRequest_clear( ) \
          ((void)p_cellcb, tSIOPortV850ESFK3Main_cRxInterruptRequest_clear( p_cellcb ))
#define cRxInterruptRequest_raise( ) \
          ((void)p_cellcb, tSIOPortV850ESFK3Main_cRxInterruptRequest_raise( p_cellcb ))
#define cRxInterruptRequest_probe( ) \
          ((void)p_cellcb, tSIOPortV850ESFK3Main_cRxInterruptRequest_probe( p_cellcb ))
#define cTxInterruptRequest_disable( ) \
          ((void)p_cellcb, tSIOPortV850ESFK3Main_cTxInterruptRequest_disable( p_cellcb ))
#define cTxInterruptRequest_enable( ) \
          ((void)p_cellcb, tSIOPortV850ESFK3Main_cTxInterruptRequest_enable( p_cellcb ))
#define cTxInterruptRequest_clear( ) \
          ((void)p_cellcb, tSIOPortV850ESFK3Main_cTxInterruptRequest_clear( p_cellcb ))
#define cTxInterruptRequest_raise( ) \
          ((void)p_cellcb, tSIOPortV850ESFK3Main_cTxInterruptRequest_raise( p_cellcb ))
#define cTxInterruptRequest_probe( ) \
          ((void)p_cellcb, tSIOPortV850ESFK3Main_cTxInterruptRequest_probe( p_cellcb ))



/* optional call port test macro (abbrev) #_TOCPA_# */
#define is_ciSIOCBR_joined()\
		tSIOPortV850ESFK3Main_is_ciSIOCBR_joined(p_cellcb)

/* entry port function macro (abbrev) #_EPM_# */
#define eSIOPort_open    tSIOPortV850ESFK3Main_eSIOPort_open
#define eSIOPort_close   tSIOPortV850ESFK3Main_eSIOPort_close
#define eSIOPort_putChar tSIOPortV850ESFK3Main_eSIOPort_putChar
#define eSIOPort_getChar tSIOPortV850ESFK3Main_eSIOPort_getChar
#define eSIOPort_enableCBR tSIOPortV850ESFK3Main_eSIOPort_enableCBR
#define eSIOPort_disableCBR tSIOPortV850ESFK3Main_eSIOPort_disableCBR
#define eiSIOCBR_readySend tSIOPortV850ESFK3Main_eiSIOCBR_readySend
#define eiSIOCBR_readyReceive tSIOPortV850ESFK3Main_eiSIOCBR_readyReceive

/* iteration code (FOREACH_CELL) #_FEC_# */
#define FOREACH_CELL(i,p_cb)   \
    for( (i) = 0; (i) < tSIOPortV850ESFK3Main_N_CELL; (i)++ ){ \
       (p_cb) = &tSIOPortV850ESFK3Main_CB_tab[i];

#define END_FOREACH_CELL   }

/* CB initialize macro #_CIM_# */
#define INITIALIZE_CB(p_that)	(void)(p_that);
#define SET_CB_INIB_POINTER(i,p_that)\
	/* empty */
#ifndef TOPPERS_MACRO_ONLY

/*  include inline header #_INL_# */
#include "tSIOPortV850ESFK3Main_inline.h"

#endif /* TOPPERS_MACRO_ONLY */

#ifdef TOPPERS_CB_TYPE_ONLY

/* undef for inline #_UDF_# */
#undef VALID_IDX
#undef GET_CELLCB
#undef CELLCB
#undef CELLIDX
#undef tSIOPortV850ESFK3Main_IDX
#undef FOREACH_CELL
#undef END_FOREACH_CELL
#undef INITIALIZE_CB
#undef SET_CB_INIB_POINTER
#undef is_ciSIOCBR_joined
#undef tSIOPortV850ESFK3Main_ciSIOCBR_readySend
#undef ciSIOCBR_readySend
#undef tSIOPortV850ESFK3Main_ciSIOCBR_readyReceive
#undef ciSIOCBR_readyReceive
#undef tSIOPortV850ESFK3Main_cSIOPort_open
#undef cSIOPort_open
#undef tSIOPortV850ESFK3Main_cSIOPort_close
#undef cSIOPort_close
#undef tSIOPortV850ESFK3Main_cSIOPort_putChar
#undef cSIOPort_putChar
#undef tSIOPortV850ESFK3Main_cSIOPort_getChar
#undef cSIOPort_getChar
#undef tSIOPortV850ESFK3Main_cSIOPort_enableCBR
#undef cSIOPort_enableCBR
#undef tSIOPortV850ESFK3Main_cSIOPort_disableCBR
#undef cSIOPort_disableCBR
#undef tSIOPortV850ESFK3Main_cRxInterruptRequest_disable
#undef cRxInterruptRequest_disable
#undef tSIOPortV850ESFK3Main_cRxInterruptRequest_enable
#undef cRxInterruptRequest_enable
#undef tSIOPortV850ESFK3Main_cRxInterruptRequest_clear
#undef cRxInterruptRequest_clear
#undef tSIOPortV850ESFK3Main_cRxInterruptRequest_raise
#undef cRxInterruptRequest_raise
#undef tSIOPortV850ESFK3Main_cRxInterruptRequest_probe
#undef cRxInterruptRequest_probe
#undef tSIOPortV850ESFK3Main_cTxInterruptRequest_disable
#undef cTxInterruptRequest_disable
#undef tSIOPortV850ESFK3Main_cTxInterruptRequest_enable
#undef cTxInterruptRequest_enable
#undef tSIOPortV850ESFK3Main_cTxInterruptRequest_clear
#undef cTxInterruptRequest_clear
#undef tSIOPortV850ESFK3Main_cTxInterruptRequest_raise
#undef cTxInterruptRequest_raise
#undef tSIOPortV850ESFK3Main_cTxInterruptRequest_probe
#undef cTxInterruptRequest_probe
#undef eSIOPort_open
#undef eSIOPort_close
#undef eSIOPort_putChar
#undef eSIOPort_getChar
#undef eSIOPort_enableCBR
#undef eSIOPort_disableCBR
#undef eiSIOCBR_readySend
#undef eiSIOCBR_readyReceive
#endif /* TOPPERS_CB_TYPE_ONLY */

#endif /* tSIOPortV850ESFK3Main_TECSGENH */
